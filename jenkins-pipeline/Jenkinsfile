def git_repo = 'https://gitlab.consulting.redhat.com/fmasood/ml-seldon-scikit.git'
def git_branch = 'master'
def project_name = 'CustomerChurnPredictor'
def namespace = "test"

node('maven'){
    

    stage('Checkout'){
        git url: "${git_repo}", branch: "${git_branch}",  credentialsId: "hdfcdeployer"

        sh """
                # if [ $(git tag -l "$version") ]; then
                #    echo "tag exists"
                #    error("Build failed because of TAG exists for the experiment id passed ..")
                # fi
                # git tag ${experiment_id}
            """
    }

    stage('Download Model'){
        sh """
            cd seldon-container
            curl --fail -o ${project_name}.sav https://minio-ml-workshop-ml-workshop.apps.cluster-del-be5e.del-be5e.sandbox1193.opentlc.com/models/${experiment_id}/CustomerChurnPredictor.sav
            cd -
        """
    }

    stage('Create Build'){
        sh """
            oc project ${namespace}
            BUILD_STATUS=\$(oc get bc hdfc-demo  --ignore-not-found=true  | awk '{if(NR>1) print \$1}')
            if [[ \${BUILD_STATUS} != hdfc-demo ]]; then
                echo "Build not found. Creating ...."
                oc new-build --name=odh-demo --strategy=docker --binary=true
            fi
           """
    }

    stage('Build Image'){
        sh """
            oc project ${namespace}
            oc patch bc odh-demo -p '{"spec": { "output": {"to": { "name": "odh-demo:${experiment_id}"}}}}'
            oc start-build odh-demo  --from-dir=./seldon-container/. --follow
           """
    }

    stage('Deploy Model'){
        sh """
            oc project ${namespace}
            sed -i 's/IMAGE_NAME/hdfc-demo:${experiment_id}/g' seldon-container/seldon-deployment.yaml
            sed -i 's/EXPERIMENT_ID/${experiment_id}/g' seldon-container/seldon-deployment.yaml
            oc apply -f seldon-container/seldon-deployment.yaml
            oc label SeldonDeployment model-${experiment_id} --overwrite=true  experiment_id=${experiment_id}
           """
    }

    stage('Expose Model'){
        sh """
            ROUTE_STATUTS=\$(oc get route hdfc-seldon-demo  --ignore-not-found=true -n ml-workshop | awk '{if(NR>1) print \$1}')
            if [[ \${ROUTE_STATUTS} != hdfc-seldon-demo ]]; then
                echo "Route not found. Creating ...."
                oc create route edge hdfc-seldon-demo --service=model-${experiment_id}-predictor --port=http
            else
                oc patch route hdfc-seldon-demo  -p '{"spec": { "to": {"name": "model-${experiment_id}-predictor"}}}'  
            fi
            oc label route hdfc-seldon-demo --overwrite=true experiment_id=${experiment_id}
        """
        
    }

}